/*!
 * Extensible 1.6.0-rc.1
 * Copyright(c) 2010-2013 Extensible, LLC
 * licensing@ext.ensible.com
 * http://ext.ensible.com
 */
Ext.Loader.setConfig({
    enabled: true,
    //disableCaching: false,
    // paths: {
    // 	// "AxAgenda": "js/app",
    //     "Extensible": "./src",
    // 	"Extensible.example": "./js"
    // }
});

Ext.application({

    requires: [
        'Ext.container.Viewport',
        'Ext.layout.container.Border',
        // 'Extensible.calendar.CalendarPanel',
	'AxAgenda.view.CalendarPanel',
        'Extensible.calendar.gadget.CalendarListPanel',
        'Extensible.calendar.data.MemoryCalendarStore',
        'Extensible.calendar.data.MemoryEventStore',
	'AxAgenda.store.Calendars',
	'AxAgenda.store.Events',	
        'AxAgenda.data.Events',
        'AxAgenda.data.Calendars'
    ],
    
    name: 'AxAgenda',
    appFolder: '/js/app',

    controllers: ['Calendars'],

    launch: function() {
        var startDay = 0; // The 0-based index for the day on which the calendar week begins (0=Sunday)

        // This is an example calendar store that enables event color-coding
        this.calendarStore = Ext.create('AxAgenda.store.Calendars');
	
        // this.calendarStore = Ext.create('Extensible.calendar.data.MemoryCalendarStore', {
        //     // defined in ../data/Calendars.js
        //     data: Ext.create('AxAgenda.data.Calendars')
        // });

        // A sample event store that loads static JSON from a local file. Obviously a real
        // implementation would likely be loading remote data via an HttpProxy, but the
        // underlying store functionality is the same.
        // this.eventStore = Ext.create('Extensible.calendar.data.MemoryEventStore', {
        //     // defined in ../data/Events.js
        //     data: Ext.create('AxAgenda.data.Events'),
        //     // This disables the automatic CRUD messaging built into the sample data store.
        //     // This test application will provide its own custom messaging. See the source
        //     // of MemoryEventStore to see how automatic store messaging is implemented.
        //     autoMsg: false
        // });

        this.eventStore = Ext.create('AxAgenda.store.Events');
	
        // This is the app UI layout code.  All of the calendar views are subcomponents of
        // CalendarPanel, but the app title bar and sidebar/navigation calendar are separate
        // pieces that are composed in app-specific layout code since they could be omitted
        // or placed elsewhere within the application.
        Ext.create('Ext.Viewport', {
            layout: 'border',
            renderTo: 'calendar-ct',
            items: [{
                id: 'app-header',
                region: 'north',
                height: 35,
                border: false,
                contentEl: 'app-header-content'
            },{
                id: 'app-center',
                title: '...', // will be updated to the current view's date range
                region: 'center',
                layout: 'border',
                listeners: {
                    'afterrender': function(){
                        Ext.getCmp('app-center').header.addCls('app-center-header');
                    }
                },
                items: [{
                    id:'app-west',
                    region: 'west',
                    width: 179,
                    border: false,
                    items: [{
                        xtype: 'datepicker',
                        id: 'app-nav-picker',
                        cls: 'ext-cal-nav-picker',
                        startDay: startDay,
                        listeners: {
                            'select': {
                                fn: function(dp, dt){
                                    Ext.getCmp('app-calendar').setStartDate(dt);
                                },
                                scope: this
                            }
                        }
                    },{
                        xtype: 'extensible.calendarlist',
                        store: this.calendarStore,
                        border: false,
                        width: 178
                    }]
                },{
                    xtype: 'axagenda.calendarpanel',
                    eventStore: this.eventStore,
                    calendarStore: this.calendarStore,
                    region: 'center',		    
                    border: false,
                }]
            }]
        });
    },
    
});
